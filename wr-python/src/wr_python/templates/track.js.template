// @ts-check
// 参考
// https://docs.google.com/spreadsheets/d/e/2PACX-1vRBXBdqpurvBmR--bzj9RJmgr7HxAoWVZmlwmhaBK-LYf_BbXn8iAPdH-ogBtXiAwxlTkQgn45PkeRW/pubhtml?gid=0&single=true

import { toMilliseconds } from '../util/time.js';

/**
 * @param {string} trackName
 * @param {string} code
 * @param {number} nitaVSWR 1:53.053の場合は153053
 * @param {number} nitaAllCombinationWR
 * @param {string[]} aliases
 * @return {import('../types').Track}
 */
const makeTrack = (trackName, code, nitaVSWR, nitaAllCombinationWR, aliases) => {
  return {
    trackName,
    code,
    nitaVSWRMilliseconds: toMilliseconds(nitaVSWR),
    nitaAllCombinationWRMilliseconds: toMilliseconds(nitaAllCombinationWR),
    aliases,
  };
};

const trackDict = Object.freeze({
  MKS: makeTrack('マリオカートスタジアム', 'MKS', {{wr['MKS']['vs']}}, {{wr['MKS']['all']}}, ['マリカス']),
  WP: makeTrack('ウォーターパーク', 'WP', {{wr['WP']['vs']}}, {{wr['WP']['all']}}, ['ウォタパ']),
  SSC: makeTrack('スイーツキャニオン', 'SSC', {{wr['SSC']['vs']}}, {{wr['SSC']['all']}}, ['スイキャニ']),
  TR: makeTrack('ドッスンいせき', 'TR', {{wr['TR']['vs']}}, {{wr['TR']['all']}}, ['遺跡', 'ドッスン', 'いせき', 'ドッスン遺跡']),
  MC: makeTrack('マリオサーキット', 'MC', {{wr['MC']['vs']}}, {{wr['MC']['all']}}, ['新マリサ', 'しんマリサ']),
  TH: makeTrack('キノピオハーバー', 'TH', {{wr['TH']['vs']}}, {{wr['TH']['all']}}, ['ハーバー']),
  TM: makeTrack('ねじれマンション', 'TM', {{wr['TM']['vs']}}, {{wr['TM']['all']}}, ['ねじマン', 'ねじれ']),
  SGF: makeTrack('ヘイホーこうざん', 'SGF', {{wr['SGF']['vs']}}, {{wr['SGF']['all']}}, ['ヘイホー鉱山', 'ヘイこう', 'こうざん']),
  SA: makeTrack('サンシャインくうこう', 'SA', {{wr['SA']['vs']}}, {{wr['SA']['all']}}, ['サンシャイン空港', '空港', 'くうこう', 'サンシャイン']),
  DS: makeTrack('ドルフィンみさき', 'DS', {{wr['DS']['vs']}}, {{wr['DS']['all']}}, ['ドルミ']),
  Ed: makeTrack('エレクトロドリーム', 'Ed', {{wr['Ed']['vs']}}, {{wr['Ed']['all']}}, ['エレドリ']),
  MW: makeTrack('ワリオスノーマウンテン', 'MW', {{wr['MW']['vs']}}, {{wr['MW']['all']}}, ['ワリスノ', '雪山']),
  CC: makeTrack('スカイガーデン', 'CC', {{wr['CC']['vs']}}, {{wr['CC']['all']}}, ['スカガ', '新スカガ']),
  BDD: makeTrack('ホネホネさばく', 'BDD', {{wr['BDD']['vs']}}, {{wr['BDD']['all']}}, ['ホネサバ', 'ホネホネ']),
  BC: makeTrack('クッパキャッスル', 'BC', {{wr['BC']['vs']}}, {{wr['BC']['all']}}, ['クパキャ']),
  RR: makeTrack('レインボーロード', 'RR', {{wr['RR']['vs']}}, {{wr['RR']['all']}}, ['新虹', 'しんにじ', 'しん虹', '新にじ']),
  rMMM: makeTrack('Wii モーモーカントリー', 'rMMM', {{wr['rMMM']['vs']}}, {{wr['rMMM']['all']}}, ['Wiiモーモーカントリー', 'モモカン', 'モーモーカントリー', 'MMM']),
  rMC: makeTrack('GBA マリオサーキット', 'rMC', {{wr['rMC']['vs']}}, {{wr['rMC']['all']}}, ['GBAマリオサーキット', 'グバマリ', 'GBAマリサ']),
  rCCB: makeTrack('DS プクプクビーチ', 'rCCB', {{wr['rCCB']['vs']}}, {{wr['rCCB']['all']}}, ['プクプクビーチ', 'プクビ', 'プクプク', 'CCB']),
  rTT: makeTrack('N64 キノピオハイウェイ', 'rTT', {{wr['rTT']['vs']}}, {{wr['rTT']['all']}}, ['ハイウェイ', 'キノピオハイウェイ', 'TT']),
  rDDD: makeTrack('GC カラカラさばく', 'rDDD', {{wr['rDDD']['vs']}}, {{wr['rDDD']['all']}}, ['GCカラカラさばく', 'カラカラさばく', 'カラサバ']),
  rDP3: makeTrack('SFC ドーナツへいや3', 'rDP3', {{wr['rDP3']['vs']}}, {{wr['rDP3']['all']}}, ['ドーナツへいや3', '平野', 'へいや', 'ドーナツへいや', 'DP3']),
  rRRy: makeTrack('N64 ピーチサーキット', 'rRRy', {{wr['rRRy']['vs']}}, {{wr['rRRy']['all']}}, ['ピチサ', 'ピーチサーキット', 'RRy']),
  rDKJ: makeTrack('3DS DKジャングル', 'rDKJ', {{wr['rDKJ']['vs']}}, {{wr['rDKJ']['all']}}, ['ジャングル', 'DKジャングル', 'DKJ', 'DK じゃんぐる']),
  rWS: makeTrack('DS ワリオスタジアム', 'rWS', {{wr['rWS']['vs']}}, {{wr['rWS']['all']}}, ['ワリスタ', 'ワリオスタジアム', 'WS']),
  rSL: makeTrack('GC シャーベットランド', 'rSL', {{wr['rSL']['vs']}}, {{wr['rSL']['all']}}, ['シャベラン', 'シャーベットランド', 'SL']),
  rMP: makeTrack('3DS ミュージックパーク', 'rMP', {{wr['rMP']['vs']}}, {{wr['rMP']['all']}}, ['ミューパ', 'ミュージックパーク', 'MP']),
  rYV: makeTrack('N64 ヨッシーバレー', 'rYV', {{wr['rYV']['vs']}}, {{wr['rYV']['all']}}, ['ヨシバ', 'ヨッシーバレー', 'YV']),
  rTTC: makeTrack('DS チクタクロック', 'rTTC', {{wr['rTTC']['vs']}}, {{wr['rTTC']['all']}}, ['チクタク', 'チクタクロック', 'TTC']),
  rPPS: makeTrack('3DS パックンスライダー', 'rPPS', {{wr['rPPS']['vs']}}, {{wr['rPPS']['all']}}, ['パクスラ', 'パックンスライダー', 'PPS']),
  rGV: makeTrack('Wii グラグラかざん', 'rGV', {{wr['rGV']['vs']}}, {{wr['rGV']['all']}}, ['火山', 'かざん', 'グラグラかざん', 'GV']),
  rRRd: makeTrack('N64 レインボーロード', 'rRRd', {{wr['rRRd']['vs']}}, {{wr['rRRd']['all']}}, ['N64レインボーロード', '64レインボーロード', 'N64レインボー', 'N64虹', 'N64にじ', '64虹', '64にじ', '64レインボー', 'RRd']),
  dYC: makeTrack('GC ヨッシーサーキット', 'dYC', {{wr['dYC']['vs']}}, {{wr['dYC']['all']}}, ['ヨシサ', 'ヨッシーサーキット', 'YC']),
  dEA: makeTrack('エキサイトバイク', 'dEA', {{wr['dEA']['vs']}}, {{wr['dEA']['all']}}, ['エキバ', 'EA']),
  dDD: makeTrack('ドラゴンロード', 'dDD', {{wr['dDD']['vs']}}, {{wr['dDD']['all']}}, ['ドラロ', 'DD']),
  dMC: makeTrack('ミュートシティ', 'dMC', {{wr['dMC']['vs']}}, {{wr['dMC']['all']}}, ['ミュート']),
  dWGM: makeTrack('Wii ワリオこうざん', 'dWGM', {{wr['dWGM']['vs']}}, {{wr['dWGM']['all']}}, ['ワリこう', 'ワリオこうざん', 'WGM', 'ワリ鉱', 'ワリオ鉱山']),
  dRR: makeTrack('SFC レインボーロード', 'dRR', {{wr['dRR']['vs']}}, {{wr['dRR']['all']}}, ['SFCレインボーロード', 'SFC虹', 'SFCにじ', 'SFCレインボー']),
  dIIO: makeTrack('ツルツルツイスター', 'dIIO', {{wr['dIIO']['vs']}}, {{wr['dIIO']['all']}}, ['ツツツ', 'ツルツル', 'IIO']),
  dHC: makeTrack('ハイラルサーキット', 'dHC', {{wr['dHC']['vs']}}, {{wr['dHC']['all']}}, ['ハイラル', 'HC']),
  dBP: makeTrack('GC ベビィパーク', 'dBP', {{wr['dBP']['vs']}}, {{wr['dBP']['all']}}, ['ベビィパーク', 'ベビーパーク', 'ベビパ', 'BP']),
  dCL: makeTrack('GBA チーズランド', 'dCL', {{wr['dCL']['vs']}}, {{wr['dCL']['all']}}, ['チーズ', 'チーズランド', 'CL']),
  dWW: makeTrack('ネイチャーロード', 'dWW', {{wr['dWW']['vs']}}, {{wr['dWW']['all']}}, ['ネイチャー', 'WW']),
  dAC: makeTrack('どうぶつの森', 'dAC', {{wr['dAC']['vs']}}, {{wr['dAC']['all']}}, ['どうぶつのもり', 'どうもり', 'どう森', 'AC']),
  dNBC: makeTrack('3DS ネオクッパシティ', 'dNBC', {{wr['dNBC']['vs']}}, {{wr['dNBC']['all']}}, ['ネオパ', 'ネオクッパ', 'ネオクッパシティ', 'NBC']),
  dRiR: makeTrack('GBA リボンロード', 'dRiR', {{wr['dRiR']['vs']}}, {{wr['dRiR']['all']}}, ['リボン', 'リボロ', 'リボンロード', 'RiR']),
  dSBS: makeTrack('リンリンメトロ', 'dSBS', {{wr['dSBS']['vs']}}, {{wr['dSBS']['all']}}, ['リンメト', 'SBS']),
  dBB: makeTrack('ビッグブルー', 'dBB', {{wr['dBB']['vs']}}, {{wr['dBB']['all']}}, ['BB', 'ビックブルー']),
  bPP: makeTrack('Tour パリプロムナード', 'bPP', {{wr['bPP']['vs']}}, {{wr['bPP']['all']}}, ['パリ', 'パリプロムナード', 'PP']),
  bTC: makeTrack('3DS キノピオサーキット', 'bTC', {{wr['bTC']['vs']}}, {{wr['bTC']['all']}}, ['キノサ', 'キノピオサーキット', 'TC']),
  bCMo: makeTrack('N64 チョコマウンテン', 'bCMo', {{wr['bCMo']['vs']}}, {{wr['bCMo']['all']}}, ['チョコマ', 'チョコマウンテン', 'CMo']),
  bCMa: makeTrack('Wii ココナッツモール', 'bCMa', {{wr['bCMa']['vs']}}, {{wr['bCMa']['all']}}, ['ココモ', 'ココナッツモール', 'CMa']),
  bTB: makeTrack('Tour トーキョースクランブル', 'bTB', {{wr['bTB']['vs']}}, {{wr['bTB']['all']}}, ['東京', 'トーキョー', 'トーキョースクランブル', 'TB']),
  bSR: makeTrack('DS キノコリッジウェイ', 'bSR', {{wr['bSR']['vs']}}, {{wr['bSR']['all']}}, ['リッジウェイ', 'キノコリッジウェイ', 'キノコリッジ', 'SR']),
  bSG: makeTrack('GBA スカイガーデン', 'bSG', {{wr['bSG']['vs']}}, {{wr['bSG']['all']}}, ['GBAスカイガーデン', 'グバスカ', 'GBAスカガ', 'SG']),
  bNH: makeTrack('Tour ニンニンドージョー', 'bNH', {{wr['bNH']['vs']}}, {{wr['bNH']['all']}}, ['ニンニン', 'ニンニンドージョー', 'NH']),
  bNYM: makeTrack('Tour ニューヨークドリーム', 'bNYM', {{wr['bNYM']['vs']}}, {{wr['bNYM']['all']}}, ['ニューヨーク', 'ニューヨークドリーム', 'NYM', 'NY']),
  bMC3: makeTrack('SFC マリオサーキット3', 'bMC3', {{wr['bMC3']['vs']}}, {{wr['bMC3']['all']}}, ['SFCマリオサーキット3', 'SFCマリオサーキット', 'マリオサーキット3', 'マリサ3', 'SFCマリサ', 'SFCマリサ3', 'MC3']),
  bKD: makeTrack('N64 カラカラさばく', 'bKD', {{wr['bKD']['vs']}}, {{wr['bKD']['all']}}, ['N64カラカラさばく', '64カラカラさばく', '64カラサバ', 'KD']),
  bWP: makeTrack('DS ワルイージピンボール', 'bWP', {{wr['bWP']['vs']}}, {{wr['bWP']['all']}}, ['ワルピン', 'ワルイージピンボール']),
  bSS: makeTrack('Tour シドニーサンシャイン', 'bSS', {{wr['bSS']['vs']}}, {{wr['bSS']['all']}}, ['シドニー', 'シドニーサンシャイン', 'SS']),
  bSL: makeTrack('GBA スノーランド', 'bSL', {{wr['bSL']['vs']}}, {{wr['bSL']['all']}}, ['スノラン', 'スノーランド']),
  bMG: makeTrack('Wii キノコキャニオン', 'bMG', {{wr['bMG']['vs']}}, {{wr['bMG']['all']}}, ['キノキャニ', 'キノコキャニオン', 'MG']),
  bSHS: makeTrack('アイスビルディング', 'bSHS', {{wr['bSHS']['vs']}}, {{wr['bSHS']['all']}}, ['アイス', 'アイビル', 'SHS']),
  bLL: makeTrack('Tour ロンドンアベニュー', 'bLL', {{wr['bLL']['vs']}}, {{wr['bLL']['all']}}, ['ロンドン', 'ロンドンアベニュー', 'アベニュー', 'LL']),
  bBL: makeTrack('GBA テレサレイク', 'bBL', {{wr['bBL']['vs']}}, {{wr['bBL']['all']}}, ['テレレ', 'テレサレイク', 'レイク', 'BL']),
  bRRM: makeTrack('3DS ロックロックマウンテン', 'bRRM', {{wr['bRRM']['vs']}}, {{wr['bRRM']['all']}}, ['ロクマ', 'ロックロックマウンテン', 'RRM']),
  bMT: makeTrack('Wii メイプルツリーハウス', 'bMT', {{wr['bMT']['vs']}}, {{wr['bMT']['all']}}, ['メイプル', 'メイプルツリーハウス', 'MT']),
  bBB: makeTrack('Tour ベルリンシュトラーセ', 'bBB', {{wr['bBB']['vs']}}, {{wr['bBB']['all']}}, ['ベルリン', 'ベルリンシュトラーセ']),
  bPG: makeTrack('DS ピーチガーデン', 'bPG', {{wr['bPG']['vs']}}, {{wr['bPG']['all']}}, ['ピチガ', 'ピーチガーデン', 'PG']),
  bMM: makeTrack('Tour メリーメリーマウンテン', 'bMM', {{wr['bMM']['vs']}}, {{wr['bMM']['all']}}, ['メリマ', 'メリーメリーマウンテン', 'メリマン', 'MM']),
  bRR7: makeTrack('3DS レインボーロード', 'bRR7', {{wr['bRR7']['vs']}}, {{wr['bRR7']['all']}}, ['3DSレインボーロード', '7虹', '7にじ', '7レインボー', '3DSレインボー', '3DS虹', '3DSにじ', 'RR7']),
  bAD: makeTrack('Tour アムステルダムブルーム', 'bAD', {{wr['bAD']['vs']}}, {{wr['bAD']['all']}}, ['アムス', 'アムステルダム', 'アムステルダムブルーム', 'AD']),
  bRP: makeTrack('GBA リバーサイドパーク', 'bRP', {{wr['bRP']['vs']}}, {{wr['bRP']['all']}}, ['リバパ', 'リバーサイドパーク', 'リバーサイド', 'リバサ', 'RP']),
  bDKS: makeTrack('Wii DKスノーボードクロス', 'bDKS', {{wr['bDKS']['vs']}}, {{wr['bDKS']['all']}}, ['スノボ', 'DKスノーボードクロス', 'スノーボードクロス', 'DKS']),
  bYI: makeTrack('ヨッシーアイランド', 'bYI', {{wr['bYI']['vs']}}, {{wr['bYI']['all']}}, ['ヨシアイ', 'YI']),
  bBR: makeTrack('Tour バンコクラッシュ', 'bBR', {{wr['bBR']['vs']}}, {{wr['bBR']['all']}}, ['バンコク', 'バンコクラッシュ', 'BR']),
  bMC: makeTrack('DS マリオサーキット', 'bMC', {{wr['bMCd']['vs']}}, {{wr['bMCd']['all']}}, ['DSマリサ']),
  bWS: makeTrack('GC ワルイージスタジアム', 'bWS', {{wr['bWS']['vs']}}, {{wr['bWS']['all']}}, ['ワルスタ', 'ワルイージスタジアム']),
  bSSy: makeTrack('Tour シンガポールスプラッシュ', 'bSSy', {{wr['bSSy']['vs']}}, {{wr['bSSy']['all']}}, ['シンガポール', 'シンガポールスプラッシュ', 'SSy']),
  bAtD: makeTrack('Tour アテネポリス', 'bAtD', {{wr['bAtD']['vs']}}, {{wr['bAtD']['all']}}, ['アテネ', 'アテネポリス', 'AtD']),
  bDC: makeTrack('GC デイジークルーザー', 'bDC', {{wr['bDC']['vs']}}, {{wr['bDC']['all']}}, ['デイクル', 'デイジークルーザー', 'DC']),
  bMH: makeTrack('Wii ムーンリッジ＆ハイウェイ', 'bMH', {{wr['bMH']['vs']}}, {{wr['bMH']['all']}}, ['ムーンリッジ＆ハイウェイ', 'ムーンリッジ', 'ムーンリッジハイウェイ', 'ムンリ', 'MH', '月']),
  bSCS: makeTrack('シャボンロード', 'bSCS', {{wr['bSCS']['vs']}}, {{wr['bSCS']['all']}}, ['シャボン', 'SCS']),
  bLAL: makeTrack('Tour ロサンゼルスコースト', 'bLAL', {{wr['bLAL']['vs']}}, {{wr['bLAL']['all']}}, ['ロス', 'ロサンゼルス', 'ロサンゼルスコースト', 'LAL']),
  bSW: makeTrack('GBA サンセットこうや', 'bSW', {{wr['bSW']['vs']}}, {{wr['bSW']['all']}}, ['サンセット', 'こうや', 'サンセットこうや', 'SW']),
  bKC: makeTrack('Wii ノコノコみさき', 'bKC', {{wr['bKC']['vs']}}, {{wr['bKC']['all']}}, ['ノコみさ', 'ノコノコみさき', 'ノコノコ', 'のこみ', 'KC']),
  bVV: makeTrack('Tour バンクーバーバレー', 'bVV', {{wr['bVV']['vs']}}, {{wr['bVV']['all']}}, ['バンクーバー', 'バンクーバーバレー', 'VV']),
  bRA: makeTrack('Tour ローマアバンティ', 'bRA', {{wr['bRA']['vs']}}, {{wr['bRA']['all']}}, ['ローマ', 'ローマアバンティ', 'RA']),
  bDKM: makeTrack('GC DKマウンテン', 'bDKM', {{wr['bDKM']['vs']}}, {{wr['bDKM']['all']}}, ['DKマウンテン', 'DKM']),
  bDCt: makeTrack('Wii デイジーサーキット', 'bDCt', {{wr['bDCt']['vs']}}, {{wr['bDCt']['all']}}, ['デイサ', 'デイジーサーキット', 'デジサ', 'DCt']),
  bPPC: makeTrack('Tour パックンしんでん', 'bPPC', {{wr['bPPC']['vs']}}, {{wr['bPPC']['all']}}, ['パクしん', 'パックンしんでん', 'PPC']),
  bMD: makeTrack('Tour マドリードグランデ', 'bMD', {{wr['bMD']['vs']}}, {{wr['bMD']['all']}}, ['マドリード', 'マドリードグランデ', 'MD']),
  bRIW: makeTrack('3DS ロゼッタプラネット', 'bRIW', {{wr['bRIW']['vs']}}, {{wr['bRIW']['all']}}, ['ロゼプラ', 'ロゼッタプラネット', 'RIW']),
  bBC3: makeTrack('SFC クッパじょう3', 'bBC3', {{wr['bBC3']['vs']}}, {{wr['bBC3']['all']}}, ['クッパじょう', 'クッパ城', 'クッパ城3', 'クッパじょう3', 'BC3']),
  bRRw: makeTrack('Wii レインボーロード', 'bRRw', {{wr['bRRw']['vs']}}, {{wr['bRRw']['all']}}, ['Wiiレインボーロード', 'Wii虹', 'Wiiにじ', 'Wiiレインボー', 'RRw']),
});

export const trackCodeSet = new Set(Object.keys(trackDict));

/**
 * コース名を変換する
 *
 * - 大文字を小文字に
 * - 全角カタカナをひらがなに
 * - 全角英数を半角に
 *
 * @param {string} trackName
 */
const normalizeTrackName = (trackName) => {
  return trackName.replace(/[ァ-ン]/g, (s) => String.fromCharCode(s.charCodeAt(0) - 0x60)).replace(/[Ａ-Ｚａ-ｚ０-９]/g, (s) => String.fromCharCode(s.charCodeAt(0) - 0xFEE0)).toLowerCase();
};

/** @type {Map<string, string>} */
const trackCodeMap = Object.entries(trackDict).reduce((acc, [key, track]) => {
  acc.set(normalizeTrackName(key), key);
  acc.set(normalizeTrackName(track.trackName), key);
  track.aliases.forEach((v) => {
    acc.set(normalizeTrackName(v), key);
  });
  return acc;
}, new Map());

/**
 * @param {string} query
 * @return {import('../types').Track | null}
 */
export const searchTrack = (query) => {
  const code = trackCodeMap.get(normalizeTrackName(query));
  if (code) {
    return trackDict[code] || null;
  }
  return null;
};

/**
 * @param {string} code
 * @return {import('../types').Track | null}
 */
export const getByCode = (code) => {
  return trackDict[code] || null;
};
